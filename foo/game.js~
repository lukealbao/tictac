$(document).ready(function() {
    var config = {
	gridSide: 72, // 72px to a side
	gridSize: 5 // 5x5f
    },
	cells;
	
    // Build the #game-board grid
    for (var i = 0; i < 25; i++) {
	var y = Math.floor(i / 5) * config.gridSide,
	    x = (i * config.gridSide) % (config.gridSize
					 * config.gridSide);
	$('<div/>').css({position: 'absolute',
			 border: '1px solid #454545',
			 width: config.gridSide - 1,
			 height: config.gridSide -1,
			 top: y, left: x})
	    .attr({idx: 24 - i,
		   class: 'cell'})
	    .prependTo($('#game-board'));
	cells = $('.cell');
    }

    // Set pieces in gutter
    for (var i = 0; i < 3; i++) {
	var x = (i * 72) + 26*i;
	$('<div/>').css({position: "absolute",
			 'z-index': 1,
			 width: config.gridSide - 2,
			 height: config.gridSide - 2,
			 top: 0,
			 left: 0,
			 transform: 'translate(' + x + 'px, 360px)'})
	    .attr({class: "player-piece",
		   id: "player-" + i})
	    .prependTo($('#stage'));
    }

    // Make Draggable
    Draggable.create(".player-piece", {
	bounds:$('#stage'),
	edgeResistance:0.65,
	type:"x,y",
	onDragEnd: function(e) {
	    var i = cells.length,
		piece = this._eventTarget,
		targetCell;
		
	    while (--i > -1) {
		if (this.hitTest(cells[i], '26%')) {
		    targetCell = cells[i];
		    TweenMax.to(piece, 0.5, {
			x: $(targetCell).css('left'),
			y: $(targetCell).css('top'),
			delay: 0.1,
			ease: Power2.easeInOut
		    }); // TODO: break out transform matrix and deal
		}
	    }
	}
    });
    
}); // document.ready
    
